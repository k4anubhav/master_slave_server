# Generated by Django 4.2.4 on 2023-08-13 03:43

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("slave", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("type", models.CharField(choices=[("REST", "Rest")], max_length=100)),
                (
                    "priority",
                    models.IntegerField(
                        default=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("payload", models.JSONField(blank=True, null=True)),
                (
                    "time_to_reassign",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("assigned_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="slave.slave",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Queue",
                "verbose_name_plural": "Job Queue",
                "db_table": "job_queue",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobResult",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("SUCCESS", "Success"), ("FAILURE", "Failure")],
                        max_length=100,
                    ),
                ),
                ("result", models.JSONField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "job_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="result",
                        to="core.job",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Result",
                "verbose_name_plural": "Job Result",
                "db_table": "job_result",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="JobLock",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField()),
                ("till", models.DateTimeField()),
                (
                    "job_id",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lock",
                        to="core.job",
                    ),
                ),
            ],
            options={
                "verbose_name": "Job Lock",
                "verbose_name_plural": "Job Lock",
                "db_table": "job_lock",
                "ordering": ["-created_at"],
            },
        ),
    ]
